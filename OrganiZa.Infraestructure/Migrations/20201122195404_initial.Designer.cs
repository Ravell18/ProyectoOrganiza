// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrganiZa.Infraestructure.Data;

namespace OrganiZa.Infraestructure.Migrations
{
    [DbContext(typeof(OrganizarecContext))]
    [Migration("20201122195404_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("OrganiZa.Domain.Entities.Administrador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CalendarioModelsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("EscuelaModelsId")
                        .HasColumnType("int");

                    b.Property<string>("NombreAd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rolusuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CalendarioModelsId");

                    b.HasIndex("EscuelaModelsId");

                    b.HasIndex("UsersId");

                    b.ToTable("Administradors");
                });

            modelBuilder.Entity("OrganiZa.Domain.Entities.Calendario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Alumno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Colegiatura")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("IdA")
                        .HasColumnType("int");

                    b.Property<int>("IdE")
                        .HasColumnType("int");

                    b.Property<int>("IdP")
                        .HasColumnType("int");

                    b.Property<int>("IdT")
                        .HasColumnType("int");

                    b.Property<string>("MesPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModoP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Statusdepago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Calendarios");
                });

            modelBuilder.Entity("OrganiZa.Domain.Entities.Escuela", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CalendarioModelsId")
                        .HasColumnType("int");

                    b.Property<double>("Colegiatura")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("IdA")
                        .HasColumnType("int");

                    b.Property<string>("ModoP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreAd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nreferencia")
                        .HasColumnType("int");

                    b.Property<int?>("PagosModelsId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CalendarioModelsId");

                    b.HasIndex("PagosModelsId");

                    b.ToTable("Escuelas");
                });

            modelBuilder.Entity("OrganiZa.Domain.Entities.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Alumno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CalendarioModelsId")
                        .HasColumnType("int");

                    b.Property<double>("Colegiatura")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fichapago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdE")
                        .HasColumnType("int");

                    b.Property<string>("Mespagado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Statusdepago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TutorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<byte[]>("Voucher")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("CalendarioModelsId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("OrganiZa.Domain.Entities.Tutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Alumno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CalendarioModelsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("EscuelaModelsId")
                        .HasColumnType("int");

                    b.Property<string>("FichaPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdE")
                        .HasColumnType("int");

                    b.Property<string>("NombreE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PagosModelsId")
                        .HasColumnType("int");

                    b.Property<string>("Rolusuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<double>("Telefono")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CalendarioModelsId");

                    b.HasIndex("EscuelaModelsId");

                    b.HasIndex("PagosModelsId");

                    b.HasIndex("UsersId");

                    b.ToTable("Tutors");
                });

            modelBuilder.Entity("OrganiZa.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("IdA")
                        .HasColumnType("int");

                    b.Property<int>("IdT")
                        .HasColumnType("int");

                    b.Property<string>("Rolusuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OrganiZa.Domain.Entities.Administrador", b =>
                {
                    b.HasOne("OrganiZa.Domain.Entities.Calendario", "CalendarioModels")
                        .WithMany("Administradors")
                        .HasForeignKey("CalendarioModelsId");

                    b.HasOne("OrganiZa.Domain.Entities.Escuela", "EscuelaModels")
                        .WithMany("Administradors")
                        .HasForeignKey("EscuelaModelsId");

                    b.HasOne("OrganiZa.Domain.Entities.User", "Users")
                        .WithMany("Administradors")
                        .HasForeignKey("UsersId");

                    b.Navigation("CalendarioModels");

                    b.Navigation("EscuelaModels");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("OrganiZa.Domain.Entities.Escuela", b =>
                {
                    b.HasOne("OrganiZa.Domain.Entities.Calendario", "CalendarioModels")
                        .WithMany("Escuelas")
                        .HasForeignKey("CalendarioModelsId");

                    b.HasOne("OrganiZa.Domain.Entities.Pago", "PagosModels")
                        .WithMany("Escuelas")
                        .HasForeignKey("PagosModelsId");

                    b.Navigation("CalendarioModels");

                    b.Navigation("PagosModels");
                });

            modelBuilder.Entity("OrganiZa.Domain.Entities.Pago", b =>
                {
                    b.HasOne("OrganiZa.Domain.Entities.Calendario", "CalendarioModels")
                        .WithMany("Pagos")
                        .HasForeignKey("CalendarioModelsId");

                    b.Navigation("CalendarioModels");
                });

            modelBuilder.Entity("OrganiZa.Domain.Entities.Tutor", b =>
                {
                    b.HasOne("OrganiZa.Domain.Entities.Calendario", "CalendarioModels")
                        .WithMany("Tutors")
                        .HasForeignKey("CalendarioModelsId");

                    b.HasOne("OrganiZa.Domain.Entities.Escuela", "EscuelaModels")
                        .WithMany("Tutors")
                        .HasForeignKey("EscuelaModelsId");

                    b.HasOne("OrganiZa.Domain.Entities.Pago", "PagosModels")
                        .WithMany("Tutors")
                        .HasForeignKey("PagosModelsId");

                    b.HasOne("OrganiZa.Domain.Entities.User", "Users")
                        .WithMany("Tutors")
                        .HasForeignKey("UsersId");

                    b.Navigation("CalendarioModels");

                    b.Navigation("EscuelaModels");

                    b.Navigation("PagosModels");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("OrganiZa.Domain.Entities.Calendario", b =>
                {
                    b.Navigation("Administradors");

                    b.Navigation("Escuelas");

                    b.Navigation("Pagos");

                    b.Navigation("Tutors");
                });

            modelBuilder.Entity("OrganiZa.Domain.Entities.Escuela", b =>
                {
                    b.Navigation("Administradors");

                    b.Navigation("Tutors");
                });

            modelBuilder.Entity("OrganiZa.Domain.Entities.Pago", b =>
                {
                    b.Navigation("Escuelas");

                    b.Navigation("Tutors");
                });

            modelBuilder.Entity("OrganiZa.Domain.Entities.User", b =>
                {
                    b.Navigation("Administradors");

                    b.Navigation("Tutors");
                });
#pragma warning restore 612, 618
        }
    }
}
